[{"D:\\teodo\\cursuri\\anul 3 sem 1\\teh_web\\bug-tracking\\front\\src\\index.js":"1","D:\\teodo\\cursuri\\anul 3 sem 1\\teh_web\\bug-tracking\\front\\src\\App.js":"2","D:\\teodo\\cursuri\\anul 3 sem 1\\teh_web\\bug-tracking\\front\\src\\reportWebVitals.js":"3","D:\\teodo\\cursuri\\anul 3 sem 1\\teh_web\\bug-tracking\\front\\src\\components\\ViewBugs.js":"4","D:\\teodo\\cursuri\\anul 3 sem 1\\teh_web\\bug-tracking\\front\\src\\components\\ViewProjects.js":"5","D:\\teodo\\cursuri\\anul 3 sem 1\\teh_web\\bug-tracking\\front\\src\\components\\Login.js":"6","D:\\teodo\\cursuri\\anul 3 sem 1\\teh_web\\bug-tracking\\front\\src\\components\\Register.js":"7","D:\\teodo\\cursuri\\anul 3 sem 1\\teh_web\\bug-tracking\\front\\src\\components\\Dashboard.js":"8","D:\\teodo\\cursuri\\anul 3 sem 1\\teh_web\\bug-tracking\\front\\src\\components\\DashboardComponents\\PageHeader.js":"9","D:\\teodo\\cursuri\\anul 3 sem 1\\teh_web\\bug-tracking\\front\\src\\components\\DashboardComponents\\SideMenu\\SideMenu.js":"10","D:\\teodo\\cursuri\\anul 3 sem 1\\teh_web\\bug-tracking\\front\\src\\components\\DashboardComponents\\Header.js":"11","D:\\teodo\\cursuri\\anul 3 sem 1\\teh_web\\bug-tracking\\front\\src\\components\\DashboardComponents\\SideMenu\\SideMenuItem.js":"12","D:\\teodo\\cursuri\\anul 3 sem 1\\teh_web\\bug-tracking\\front\\src\\components\\DashboardComponents\\Button\\Button.js":"13","D:\\teodo\\cursuri\\anul 3 sem 1\\teh_web\\bug-tracking\\front\\src\\components\\AddBug.js":"14","D:\\teodo\\cursuri\\anul 3 sem 1\\teh_web\\bug-tracking\\front\\src\\components\\ViewTeams.js":"15"},{"size":517,"mtime":1611320945556,"results":"16","hashOfConfig":"17"},{"size":2573,"mtime":1611355298640,"results":"18","hashOfConfig":"17"},{"size":375,"mtime":1611320945560,"results":"19","hashOfConfig":"17"},{"size":8174,"mtime":1611347778531,"results":"20","hashOfConfig":"17"},{"size":4210,"mtime":1611352840998,"results":"21","hashOfConfig":"17"},{"size":3004,"mtime":1611330040213,"results":"22","hashOfConfig":"17"},{"size":4259,"mtime":1611329636203,"results":"23","hashOfConfig":"17"},{"size":3078,"mtime":1611348063248,"results":"24","hashOfConfig":"17"},{"size":903,"mtime":1611335441373,"results":"25","hashOfConfig":"17"},{"size":1796,"mtime":1611330910890,"results":"26","hashOfConfig":"17"},{"size":1784,"mtime":1611320945484,"results":"27","hashOfConfig":"17"},{"size":503,"mtime":1611355382812,"results":"28","hashOfConfig":"17"},{"size":626,"mtime":1611320945478,"results":"29","hashOfConfig":"17"},{"size":4785,"mtime":1611354281011,"results":"30","hashOfConfig":"17"},{"size":6775,"mtime":1611357427133,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"17ydy1",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\teodo\\cursuri\\anul 3 sem 1\\teh_web\\bug-tracking\\front\\src\\index.js",[],["69","70"],"D:\\teodo\\cursuri\\anul 3 sem 1\\teh_web\\bug-tracking\\front\\src\\App.js",[],"D:\\teodo\\cursuri\\anul 3 sem 1\\teh_web\\bug-tracking\\front\\src\\reportWebVitals.js",[],"D:\\teodo\\cursuri\\anul 3 sem 1\\teh_web\\bug-tracking\\front\\src\\components\\ViewBugs.js",["71"],"import React, { Component } from 'react'\r\nimport SideMenu from './DashboardComponents/SideMenu/SideMenu';\r\nimport Header from './DashboardComponents/Header'\r\nimport PageHeader from './DashboardComponents/PageHeader'\r\nimport {withRouter} from 'react-router-dom'\r\nimport Table from '@material-ui/core/Table';  \r\nimport TableBody from '@material-ui/core/TableBody';  \r\nimport TableCell from '@material-ui/core/TableCell';  \r\nimport TableContainer from '@material-ui/core/TableContainer';  \r\nimport TableHead from '@material-ui/core/TableHead';  \r\nimport TableRow from '@material-ui/core/TableRow';  \r\nimport Paper from '@material-ui/core/Paper';\r\nimport axios from 'axios';\r\nimport '../css/viewProjects.css'\r\nimport {Button} from '@material-ui/core'\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport {TextField, Dialog, DialogActions, DialogContent,\r\nDialogContentText, DialogTitle} from '@material-ui/core'\r\n\r\nconst styles = {\r\n    appMain: {\r\n      paddingLeft: '250px',\r\n      width: '100%'\r\n    },\r\n    background: {\r\n      default: \"#f4f5fd\"\r\n    },\r\n  \r\n    table: {\r\n      width: '50%'\r\n    },\r\n    TableContainer: {\r\n      width: '100%',\r\n      align: 'center'\r\n    },\r\n    h1: {\r\n        align: 'center'\r\n    },\r\n\r\n  }\r\n\r\nclass ViewBugs extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.id = this.props.match.params.id\r\n        console.log(this.id)\r\n\r\n        this.state = {\r\n            Bugs: [],\r\n            dialog: false,\r\n            bugID: -1,\r\n            linkSolved: ''\r\n        }\r\n\r\n        this.openDialog = () => {\r\n            this.setState({dialog: true})\r\n        }\r\n        this.closeDialog = () => {\r\n            this.setState({dialog: false})\r\n        }\r\n        this.getBugs = () => {\r\n            axios.get(`/api/bug/getAllBugs/${this.id}`)\r\n            .then(res => {\r\n                console.log(res.data);\r\n                this.setState({\r\n                    Bugs: res.data\r\n                });\r\n            }) \r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getBugs();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <SideMenu name=\"home\"></SideMenu>\r\n                <div className=\"App\" style={styles.appMain}>\r\n                <Header></Header>\r\n                <h1>View all bugs from project</h1>\r\n                <TableContainer className=\"projectsTable\"component={Paper}>\r\n                    <Table stickyHeader>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell align=\"center\">Description</TableCell>\r\n                                <TableCell align=\"center\">Severity</TableCell> \r\n                                <TableCell align=\"center\">Priority</TableCell> \r\n                                <TableCell align=\"center\">LinkBug</TableCell> \r\n                                <TableCell align=\"center\">Status</TableCell>\r\n                                <TableCell align=\"center\">LinkSolved</TableCell>\r\n                                <TableCell align=\"center\">userID</TableCell>\r\n                                <TableCell align=\"center\">Assign</TableCell>\r\n                                <TableCell align=\"center\">Update</TableCell>\r\n\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {\r\n                                this.state.Bugs.map((b, index) => {\r\n                                    return <TableRow key={index}>\r\n                                        <TableCell align=\"center\" component=\"th\" scope=\"row\">\r\n                                        {b.Description}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\">{b.Severity}</TableCell>\r\n                                        <TableCell align=\"center\">{b.Priority}</TableCell>\r\n                                        <TableCell align=\"center\">{b.LinkBug}</TableCell>\r\n                                        <TableCell align=\"center\">{b.Status}</TableCell>\r\n                                        <TableCell align=\"center\">{b.LinkSolved ? b.LinkSolved: \"-\"}</TableCell>\r\n                                        <TableCell align=\"center\">{b.userID ? b.userID: \"-\"}</TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            <Button onClick={\r\n                                                () => {\r\n                                                    axios.put(\"/api/bug/assignBug\", {id: b.id})\r\n                                                    .then(res => {\r\n                                                        toast.success(res.data)\r\n                                                        this.getBugs();\r\n                                                    })\r\n                                                    .catch(err => {\r\n                                                        toast.error(err.response.data)\r\n                                                    })\r\n                                                }\r\n                                            }>\r\n                                                assign\r\n                                            </Button>\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            <Button onClick={\r\n                                                () => {\r\n                                                    this.setState({bugID: b.id});\r\n                                                    this.openDialog();\r\n                                                }\r\n                                            }>Update\r\n                                            </Button>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                })\r\n                            }\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                \r\n        <Dialog open={this.state.dialog} onClose={this.closeDialog} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Add link for the commit where you solved the bug:\r\n          </DialogContentText>\r\n          <TextField value={this.state.linkSolved} onChange={(e) => {\r\n              this.setState({linkSolved: e.target.value})}}\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Link Solved\"\r\n            type=\"email\"\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={this.closeDialog} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={\r\n              () => {\r\n                  axios.put(\"/api/bug/updateBug\", {\r\n                      id: this.state.bugID, \r\n                      status: \"solved\",\r\n                      linkSolved: this.state.linkSolved\r\n                  })\r\n                  .then(res => {\r\n                    this.closeDialog(); \r\n                    toast.success(res.data)\r\n                    this.getBugs();\r\n                })\r\n                  .catch(err => {\r\n                      this.closeDialog();\r\n                      toast.error(err.response.data)\r\n                  })\r\n              }\r\n          } color=\"primary\">\r\n            Save\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n                <ToastContainer\r\n                position=\"bottom-center\"\r\n                autoClose={5000}\r\n                hideProgressBar={true}\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n            />\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default withRouter(ViewBugs);\r\n\r\n","D:\\teodo\\cursuri\\anul 3 sem 1\\teh_web\\bug-tracking\\front\\src\\components\\ViewProjects.js",["72"],"import React, { Component } from 'react'\r\nimport SideMenu from './DashboardComponents/SideMenu/SideMenu';\r\nimport Header from './DashboardComponents/Header'\r\nimport PageHeader from './DashboardComponents/PageHeader'\r\nimport {withRouter} from 'react-router-dom'\r\nimport Table from '@material-ui/core/Table';  \r\nimport TableBody from '@material-ui/core/TableBody';  \r\nimport TableCell from '@material-ui/core/TableCell';  \r\nimport TableContainer from '@material-ui/core/TableContainer';  \r\nimport TableHead from '@material-ui/core/TableHead';  \r\nimport TableRow from '@material-ui/core/TableRow';  \r\nimport Paper from '@material-ui/core/Paper';\r\nimport axios from 'axios';\r\nimport '../css/viewProjects.css'\r\nimport {Button} from '@material-ui/core'\r\n\r\nconst styles = {\r\n    appMain: {\r\n      paddingLeft: '250px',\r\n      width: '100%'\r\n    },\r\n    background: {\r\n      default: \"#f4f5fd\"\r\n    },\r\n  \r\n    table: {\r\n      width: '50%'\r\n    },\r\n    TableContainer: {\r\n      width: '100%',\r\n      align: 'center'\r\n    },\r\n    h1: {\r\n        align: 'center'\r\n    },\r\n\r\n  }\r\n\r\nclass ViewProjects extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            Projects: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('/api/project/getProjects')\r\n        .then(res => {\r\n            console.log(res.data);\r\n            this.setState({\r\n                Projects: res.data\r\n            });\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <SideMenu name=\"home\"></SideMenu>\r\n                <div className=\"App\" style={styles.appMain}>\r\n                <Header></Header>\r\n                <h1>View All Projects</h1>\r\n                <TableContainer className=\"projectsTable\"component={Paper}>\r\n                    <Table stickyHeader>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell align=\"center\">Name</TableCell>\r\n                                <TableCell align=\"center\">Description</TableCell> \r\n                                <TableCell align=\"center\">Repo</TableCell> \r\n                                <TableCell align=\"center\">Team number</TableCell> \r\n                                <TableCell align=\"center\">Add bug</TableCell>\r\n                                <TableCell align=\"center\">See bugs</TableCell>\r\n\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {\r\n                                this.state.Projects.map((p, index) => {\r\n                                    return <TableRow key=\"index\">\r\n                                        <TableCell align=\"center\" component=\"th\" scope=\"row\">\r\n                                        {p.Name}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\">{p.Description}</TableCell>\r\n                                        <TableCell align=\"center\">{p.Repo}</TableCell>\r\n                                        <TableCell align=\"center\">{p.teamID}</TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            <Button onClick={() => {\r\n                                                this.props.history.push(`/dashboard/project/${p.id}/add`)\r\n                                            }}>Click to add</Button>\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                        <Button onClick={() => {\r\n                                            this.props.history.push(`/dashboard/project/${p.id}/bugs`)\r\n                                        }}>Click to see</Button>\r\n\r\n                                        </TableCell>\r\n\r\n                                    </TableRow>\r\n                                })\r\n                            }\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default withRouter(ViewProjects);\r\n\r\n","D:\\teodo\\cursuri\\anul 3 sem 1\\teh_web\\bug-tracking\\front\\src\\components\\Login.js",[],"D:\\teodo\\cursuri\\anul 3 sem 1\\teh_web\\bug-tracking\\front\\src\\components\\Register.js",["73"],"import React, {Component} from 'react'\r\nimport '../css/register.css'\r\nimport axios from 'axios'\r\nimport {TextField, Button, Icon, Grid, Snackbar} from '@material-ui/core'\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport {withRouter} from 'react-router-dom'\r\n\r\nclass Register extends Component{\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            firstName: '',\r\n            lastName: '',\r\n            email: '',\r\n            password: '',\r\n            openSuccess: false,\r\n            openError: false\r\n        }\r\n\r\n        this.changeHandler=(e) => {\r\n            this.setState({\r\n                [e.target.name]: e.target.value\r\n            }) \r\n        }\r\n\r\n        this.onRegister = (e) => {\r\n            if (this.state.firstName && this.state.lastName && this.state.password && this.state.email && this.state.password) {\r\n                axios.post('/api/auth/register', {firstName: this.state.firstName, lastName: this.state.lastName, \r\n                    email: this.state.email, password: this.state.password})\r\n                    .then((res) => {console.log(res.data);\r\n                        this.setState({openSuccess: true})\r\n                    })\r\n                    .catch(error => {console.log(error.response.data);\r\n                                    toast.error(`${error.response.data.message}`);}) //cu toastify\r\n            } else {\r\n                this.setState({openError: true})\r\n            }\r\n        }\r\n\r\n        this.handleCloseSuccess = () => {\r\n            this.setState({openSuccess: false})\r\n        }\r\n        this.handleCloseError = () => {\r\n            this.setState({openError: false})\r\n        }\r\n\r\n    }\r\n    render() {\r\n        return(\r\n            <div>\r\n            <h1 className=\"registerTitle\">Register</h1>\r\n            <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" spacing={1}>\r\n            <Grid item xs={12} sm={6}>\r\n            <TextField name=\"firstName\" onChange={this.changeHandler} value={this.state.firstName} id=\"outlined-basic\" autoFocus required label=\"First Name\" variant=\"outlined\" />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n            <TextField name=\"lastName\" onChange={this.changeHandler} value={this.state.lastName} id=\"outlined-basic\" autoFocus required label=\"Last Name\" variant=\"outlined\" />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n            <TextField name=\"email\" onChange={this.changeHandler} value={this.state.email} id=\"outlined-basic\" autoFocus required label=\"Email Address\" variant=\"outlined\" />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n            <TextField name=\"password\" onChange={this.changeHandler} value={this.state.password} id=\"outlined-basic\" autoFocus required label=\"Password\" variant=\"outlined\" />\r\n            </Grid>\r\n            <Button variant=\"contained\" size=\"medium\" color=\"primary\" endIcon={<Icon>send</Icon>} onClick={this.onRegister}>\r\n                send\r\n            </Button>\r\n            <p><span onClick={() => {\r\n                this.props.history.push(\"/\");\r\n            }}>Go back to<a> Login.</a></span></p>\r\n            </Grid>\r\n            <Snackbar open={this.state.openSuccess} autoHideDuration={2000} onClose={this.handleCloseSuccess}>\r\n            <Alert severity=\"success\" onClose={this.handleCloseSuccess}>\r\n            You have successfully registered!\r\n            </Alert>\r\n            </Snackbar>\r\n            <Snackbar open={this.state.openError} autoHideDuration={2000} onClose={this.handleCloseError}>\r\n            <Alert severity=\"error\" onClose={this.handleCloseError}>\r\n            Check your fields again so they're not empty\r\n            </Alert>\r\n            </Snackbar>\r\n            <ToastContainer\r\n                position=\"bottom-center\"\r\n                autoClose={5000}\r\n                hideProgressBar={true}\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n            />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Register)\r\n","D:\\teodo\\cursuri\\anul 3 sem 1\\teh_web\\bug-tracking\\front\\src\\components\\Dashboard.js",["74","75"],"\r\nimport React, { Component } from 'react'\r\nimport SideMenu from './DashboardComponents/SideMenu/SideMenu';\r\nimport Header from './DashboardComponents/Header'\r\nimport PageHeader from './DashboardComponents/PageHeader'\r\nimport { Table, CssBaseline, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Button } from '@material-ui/core';\r\nimport { withRouter } from 'react-router-dom'\r\nimport axios from 'axios'\r\n// import {router} from '../../../routes';\r\n// import {get} from '../../../controllers/user'\r\n\r\nconst styles = {\r\n  appMain: {\r\n    paddingLeft: '250px',\r\n    width: '100%'\r\n  },\r\n  background: {\r\n    default: \"#f4f5fd\"\r\n  },\r\n\r\n  table: {\r\n    width: '100%'\r\n  },\r\n  TableContainer: {\r\n    width: '50%',\r\n    allign: 'center'\r\n  }\r\n}\r\nfunction createData(info, infouser) {\r\n  return { info, infouser };\r\n}\r\n\r\nclass Dashboard extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      rows: []\r\n    }\r\n\r\n    this.changeUsername = (e) => {\r\n      axios.post('/api/user/updateUserName/:id', {})\r\n    }\r\n     // va fi implementat, ma gan\r\n    this.changePasswd = (e) => {\r\n      axios.post('/api/user/updatePassword', {})\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    let token = localStorage.getItem('token');\r\n    axios.defaults.headers.common = { 'Authorization': `Bearer ${token}` };\r\n    axios.get('/api/user/getUser')\r\n      .then(res => {\r\n        console.log(res.data);\r\n        let rows = [];\r\n        for (let info in res.data) {\r\n          if (info != 'id' && info != 'Password')\r\n            rows.push(createData(info, res.data[info]));\r\n        }\r\n        this.setState({\r\n          rows\r\n        })\r\n      })\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <SideMenu name=\"home\"></SideMenu>\r\n        <div className=\"App\" style={styles.appMain}>\r\n          <Header></Header>\r\n          <PageHeader title={\"\"} subtitle={\"\"}></PageHeader>\r\n          <br></br><br></br><br></br>\r\n          <TableContainer style={{ width: 400, margin: 'auto' }} component={Paper}>\r\n            <Table style={styles.table} aria-label=\"simple table\" >\r\n              <TableHead>\r\n                <TableRow >\r\n                  <TableCell>INFO</TableCell>\r\n                  <TableCell align=\"left\">USER</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {this.state.rows.map((row) => (\r\n                  <TableRow align=\"left\" key={row.info} hover=\"true\">\r\n                    <TableCell component=\"th\" scope=\"row\">{row.info}</TableCell>\r\n                    <TableCell >{row.infouser}</TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <br></br><br></br>\r\n          <Button variant=\"contained\" onClick={this.changeUsername}>Schimba Username</Button>\r\n          <Button variant=\"contained\" onClick={this.changePasswd}>Reseteaza Parola</Button>\r\n        </div>\r\n        <CssBaseline />\r\n\r\n      </>\r\n    )\r\n  };\r\n}\r\n\r\nexport default withRouter(Dashboard);\r\n","D:\\teodo\\cursuri\\anul 3 sem 1\\teh_web\\bug-tracking\\front\\src\\components\\DashboardComponents\\PageHeader.js",["76"],"import { Card, Paper, Typography,Container  } from '@material-ui/core';\r\nimport { spacing } from '@material-ui/system';\r\nimport React from 'react';\r\n\r\nconst styles = {\r\n    textStyle: {\r\n        padding: '10px',\r\n        display: 'flex',\r\n        marginBottom: '5px'\r\n    },\r\n    container:{\r\n       // backgroundColor: \"blue\"\r\n    }\r\n    \r\n\r\n}\r\n\r\nconst PageHeader = (props) => (\r\n    <Paper elevation={0} square>\r\n        <Card  style={styles.container} >\r\n            <Typography variant=\"h6\" component=\"div\">\r\n                {props.title}\r\n            </Typography>\r\n            <Typography variant=\"hsubtitle6\" component=\"div\">\r\n                {props.subtitle}\r\n            </Typography>\r\n            <Container fixed >\r\n                <h1> \r\n                    PROFIL UTILIZATOR\r\n                </h1>\r\n\r\n            </Container>\r\n        </Card >\r\n\r\n    </Paper>\r\n)\r\nexport default PageHeader;","D:\\teodo\\cursuri\\anul 3 sem 1\\teh_web\\bug-tracking\\front\\src\\components\\DashboardComponents\\SideMenu\\SideMenu.js",["77","78","79","80"],"import React, { Component, Fragment } from 'react';\r\nimport { Drawer } from '@material-ui/core';\r\nimport { MenuItems } from \"./SideMenuItem\";\r\nimport { Button } from \"../Button/Button\"\r\nimport PageHeader from '../PageHeader'\r\nimport \"./SideMenu.css\"\r\nimport { Link } from 'react-router-dom';\r\nconst styles = {\r\n    sidemenu: color => ({\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        position: \"absolute\",\r\n        backgroundColor: color,\r\n        left: \"0px\",\r\n        width: \"250px\",\r\n        height: \"100%\"\r\n    }),\r\n    wrapper: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"flex-start\",\r\n        padding: \"1em\"\r\n    },\r\n};\r\nclass SideMenu extends Component {\r\n    state = { clicked: false }\r\n\r\n    handleClick = () => {\r\n        this.setState({ clicked: !this.state.clicked \r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <nav className=\"nav-menu \" style={styles.sidemenu(\"LightSteelBlue\")}>\r\n            \r\n                <div className=\"menu\">\r\n                    <i className={this.state.clicked ? 'fas fa-times' : 'fas fa-bars'}></i> \r\n                     {/* pentru efectul de hoover */}\r\n                </div>\r\n                <ul className='nav-menu-items'>\r\n                    {\r\n                    MenuItems.map((item, index) => {\r\n                        return (\r\n                            <li key={index} className=' nav-text'>\r\n                                <Link to={item.path} >\r\n                                    {item.title}\r\n                                </Link>\r\n                                \r\n                            </li>\r\n                        )\r\n                    })}\r\n\r\n                </ul>\r\n            </nav>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default SideMenu;","D:\\teodo\\cursuri\\anul 3 sem 1\\teh_web\\bug-tracking\\front\\src\\components\\DashboardComponents\\Header.js",[],"D:\\teodo\\cursuri\\anul 3 sem 1\\teh_web\\bug-tracking\\front\\src\\components\\DashboardComponents\\SideMenu\\SideMenuItem.js",[],"D:\\teodo\\cursuri\\anul 3 sem 1\\teh_web\\bug-tracking\\front\\src\\components\\DashboardComponents\\Button\\Button.js",[],"D:\\teodo\\cursuri\\anul 3 sem 1\\teh_web\\bug-tracking\\front\\src\\components\\AddBug.js",["81","82"],"D:\\teodo\\cursuri\\anul 3 sem 1\\teh_web\\bug-tracking\\front\\src\\components\\ViewTeams.js",["83","84","85"],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":4,"column":8,"nodeType":"92","messageId":"93","endLine":4,"endColumn":18},{"ruleId":"90","severity":1,"message":"91","line":4,"column":8,"nodeType":"92","messageId":"93","endLine":4,"endColumn":18},{"ruleId":"94","severity":1,"message":"95","line":73,"column":26,"nodeType":"96","endLine":73,"endColumn":29},{"ruleId":"97","severity":1,"message":"98","line":58,"column":20,"nodeType":"99","messageId":"100","endLine":58,"endColumn":22},{"ruleId":"97","severity":1,"message":"98","line":58,"column":36,"nodeType":"99","messageId":"100","endLine":58,"endColumn":38},{"ruleId":"90","severity":1,"message":"101","line":2,"column":10,"nodeType":"92","messageId":"93","endLine":2,"endColumn":17},{"ruleId":"90","severity":1,"message":"102","line":1,"column":28,"nodeType":"92","messageId":"93","endLine":1,"endColumn":36},{"ruleId":"90","severity":1,"message":"103","line":2,"column":10,"nodeType":"92","messageId":"93","endLine":2,"endColumn":16},{"ruleId":"90","severity":1,"message":"104","line":4,"column":10,"nodeType":"92","messageId":"93","endLine":4,"endColumn":16},{"ruleId":"90","severity":1,"message":"91","line":5,"column":8,"nodeType":"92","messageId":"93","endLine":5,"endColumn":18},{"ruleId":"90","severity":1,"message":"105","line":2,"column":35,"nodeType":"92","messageId":"93","endLine":2,"endColumn":40},{"ruleId":"90","severity":1,"message":"106","line":10,"column":7,"nodeType":"92","messageId":"93","endLine":10,"endColumn":13},{"ruleId":"90","severity":1,"message":"91","line":4,"column":8,"nodeType":"92","messageId":"93","endLine":4,"endColumn":18},{"ruleId":"90","severity":1,"message":"107","line":17,"column":10,"nodeType":"92","messageId":"93","endLine":17,"endColumn":24},{"ruleId":"90","severity":1,"message":"108","line":18,"column":9,"nodeType":"92","messageId":"93","endLine":18,"endColumn":18},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"no-unused-vars","'PageHeader' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'spacing' is defined but never used.","'Fragment' is defined but never used.","'Drawer' is defined but never used.","'Button' is defined but never used.","'Paper' is defined but never used.","'styles' is assigned a value but never used.","'ToastContainer' is defined but never used.","'TextField' is defined but never used.","no-global-assign","no-unsafe-negation"]
